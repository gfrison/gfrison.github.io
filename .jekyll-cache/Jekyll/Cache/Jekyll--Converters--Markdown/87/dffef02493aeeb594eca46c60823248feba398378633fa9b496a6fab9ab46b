I"•<p><img src="http://localhost:4000/assets/scrum.jpg" alt="" />
At school times the teacher used to quote an important saying:
culture is what remains after we forget the things we studied thorougly.
The concept is charming, but at that time the principle was often adopted to forget things even before they were studied.</p>

<p>The saying is also valid for software development methodologies, where the best practices try to teach us the right path to come up with something really good, shaping a product in the most efficient way and with the highest quality.
The agile methodologies set few general rules, but the result depends on you, your skills and your team of course, not on the methodology.
Scrum doesnâ€™t produce good software products, but if you are smart, it might suggest you some hints helpful to get away with the failure scenario.</p>

<h2 id="what-does-scrum-say">What does Scrum say?</h2>
<p>It declares that all activities are in a time box and assigns to each team member his own responsibility based on workload estimation, and the activities priority has to be shared with your chief, most of the time the Scrum master.
The daily meetings are essential, the team members explain what they did the day before and what they are going to do today and the blocking problems that affect the task development, as well as the estimated time for the new task or its progress update.
As in the rugby game from which Scrum took its name, the goal is to get things done. The powerpoint presentations, the docs are internal artifacts but the objective is to <strong>get product shipped</strong>.</p>

<p>How? By setting objectives for the next iteration (sprint), and incrementally so on with the next. The iterations firstly face the most critical issues and the trivial ones come later, as you are mostly concerned with the software/system architecture and youâ€™d know if such solution overcome the issue, as soon as possible.</p>

<p>As in the rugby game, the project team will be capable of thinking by itself. The coach hasnâ€™t to enforce a defined set of steps to reach those objectives, and as in a real game the team has to learn to handle chaos of requirement changing and with emerging problems (even hoping that Italy will win the next 6 nations).</p>

<h2 id="my-considerations">My considerations</h2>
<p>In my scrum practice, Iâ€™ve appreciated the time estimation duty for each single task, as discussing with fellows or build a new feature. However, I donâ€™t find it much helpful during the meetings because itâ€™s an information that project managers need to check the process but not useful to the other developing members. The time estimations are closely related to the tasks, so why not to handle them with the issue/bug tracking system, jira for example? You might use it as a time monitor, so the scrum master can automatically obtain all required informations about the developmentâ€™s progress.
The meeting is an opportunity to get together and to make it clear to others where you are, but most importantly, firstly explain your problems. Sharing difficulties among the members and get proper tips back make the team more integrated and helps to overcome matters quickly.</p>

<p>What impresses of the agile methodology practices is the communication approach, the synchronization of the developers and the feedback on a daily basis. Quick stand up meetings in the morning, before the activities start; maybe better with a coffee.</p>
:ET